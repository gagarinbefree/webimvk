{"version":3,"sources":["Friend.js","Server.js","Friends.js","App.js","serviceWorker.js","index.js"],"names":["Friend","_ref","id","lastName","firstName","photo","online","react_default","a","createElement","className","src","width","height","alt","Server","userId","accessToken","url","jQuery","ajax","type","dataType","data","response","Friends","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","friends","Fragment","map","item","index","src_Friend","key","first_name","last_name","photo_50","getFriends","friendsGet","res","logout","setState","items","React","Component","initState","user","undefined","isLogon","homePage","App","_this2","onClick","src_Friends","localStorage","clear","window","location","href","field","string","RegExp","exec","login","token","getItem","usersGet","length","getQueryString","document","hash","setItem","concat","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d6f5e097.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Friend = ({id, lastName, firstName, photo, online}) => {\r\n    return <div className=\"row mt-3\" id={id}>\r\n        <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top rounded-circle\" alt=\"\" />\r\n        <span className=\"ml-3\">{firstName + \" \" + lastName}</span>\r\n        {online === 1 ? <span className=\"ml-3 text-success\">online</span> : null}\r\n    </div>\r\n};\r\n\r\nexport default Friend;","import jQuery from \"jquery\";\r\n\r\nclass Server {\r\n    static async usersGet(userId, accessToken) {\r\n        let url = `https://api.vk.com/method/users.get?user_ids=${userId}&fields=photo_50&access_token=${accessToken}&v=5.101`;  \r\n\r\n        try {\r\n            var data = await jQuery.ajax({\r\n                url : url,\r\n                type : \"GET\",\r\n                dataType : \"jsonp\"\r\n            });\r\n\r\n            return data.response;\r\n        }\r\n        catch(e) {\r\n            return null;            \r\n        }\r\n    }\r\n\r\n    static async friendsGet(userId, accessToken) {\r\n        let url = `https://api.vk.com/method/friends.get?user_id=${userId}&fields=photo_50&access_token=${accessToken}&v=5.101`;  \r\n\r\n        try {\r\n            var data = await jQuery.ajax({\r\n                url : url,\r\n                type : \"GET\",\r\n                dataType : \"jsonp\"\r\n            });\r\n\r\n            return data.response;\r\n        }\r\n        catch(e) {\r\n            return null;            \r\n        }\r\n    }\r\n}\r\n\r\nexport default Server;","import React from 'react';\r\nimport Friend from './Friend';\r\nimport Server from './Server';\r\n\r\nclass Friends extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {friends: []}\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.state.friends.map((item, index) => {\r\n                    return <Friend key={item.id} id={item.id} firstName={item.first_name} lastName={item.last_name} online={item.online} photo={item.photo_50} />\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    }    \r\n\r\n    async componentDidMount() {\r\n        await this.getFriends();\r\n    }\r\n\r\n    async getFriends() {    \r\n        var res = await Server.friendsGet(this.props.userId, this.props.accessToken);\r\n        if (!res)\r\n            this.props.logout();\r\n\r\n        this.setState({friends: res.items});\r\n    }\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport './App.css';\r\nimport Friends from './Friends';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Server from './Server';\r\n\r\nconst initState = {\r\n    user: undefined,\r\n    accessToken: '',\r\n    isLogon: false\r\n}\r\n\r\nconst homePage = 'https://gagarinbefree.github.io/webimvk'\r\nconst clientId = '7047531';\r\n\r\n//for test\r\n//const homePage = 'http://localhost'\r\n//const clientId = '7053406';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initState;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isLogon)\r\n            return null;\r\n\r\n        return <div className=\"App\">          \r\n            <nav className=\"navbar navbar-dark bg-primary\">\r\n                <div className=\"navbar-brand\">\r\n                    <img src={this.state.user.photo_50} width=\"30\" height=\"30\" className=\"d-inline-block align-top rounded-circle\" alt=\"\"></img>\r\n                    <strong className=\"ml-3\">{this.state.user.first_name + \" \" + this.state.user.last_name}</strong>\r\n                </div>\r\n                <div className=\"navbar-right cursor-pointer\" onClick={() => this.logout()}>\r\n                    <span className=\"font-weight-light text-light\">Выход</span>\r\n                </div>\r\n            </nav>\r\n            <div className=\"d-flex align-items-center justify-content-center h-100 mt-3\">\r\n                <div className=\"d-flex flex-column\">\r\n                    <Friends userId={this.state.user.id} accessToken={this.state.accessToken} logout={() => this.logout()} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    logout() {        \r\n        localStorage.clear();\r\n        this.setState(initState);\r\n        window.location.href = homePage;\r\n    }\r\n\r\n    \r\n    getQueryString(field, url) {\r\n        var href = url;\r\n        var reg = new RegExp( '[#&]' + field + '=([^&#]*)', 'i' );\r\n        var string = reg.exec(href);\r\n        return string ? string[1] : null;\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.login();\r\n    }\r\n\r\n    async login() {\r\n        let token = localStorage.getItem('access_token');\r\n        let userId = localStorage.getItem('user_id');\r\n        if (token && userId)\r\n        {\r\n            let res = await Server.usersGet(userId, token);\r\n            if (res && res.length > 0) {\r\n                this.setState( {\r\n                    user: res[0],\r\n                    accessToken: token,\r\n                    isLogon: true\r\n                });       \r\n            }\r\n            else \r\n                this.logout();\r\n        }\r\n        else {\r\n            token = this.getQueryString('access_token', document.location.hash);\r\n            userId = this.getQueryString('user_id', document.location.hash);\r\n\r\n            if (token && userId) {\r\n                localStorage.setItem('access_token', token);\r\n                localStorage.setItem('user_id', userId);\r\n\r\n                window.location.href = homePage;\r\n            }\r\n            else\r\n                window.location.href = `https://oauth.vk.com/authorize?client_id=${clientId}&display=page&redirect_uri=${homePage}&response_type=token&revoke=1`;\r\n        }\r\n    }   \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}